@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem);
  }
  80% {
    transform: translateX(1rem);
  }
  100% {
    opacity: 1;
    transform: translateX(0);
  }
}
@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem);
  }
  80% {
    transform: translateX(-1rem);
  }
  100% {
    opacity: 1;
    transform: translateX(0);
  }
}
@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(3rem);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}
/* Basic Reset */
*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: inherit;
}

html {
  font-size: 62.5%;
}

body {
  box-sizing: border-box;
}

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  line-height: 1.7;
  color: #777;
  padding: 3rem;
}

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  /* This is fix which fixes animations from being shaky (maybe on older browser versions) */
  backface-visibility: hidden;
  margin-bottom: 6rem;
}
.heading-primary-primary--main {
  display: block;
  font-size: 6rem;
  font-weight: 400;
  letter-spacing: 3.5rem;
  animation-name: moveInLeft;
  animation-duration: 1s;
  animation-timing-function: ease-out;
  /* 
  animation-delay: 3s;
  animation-iteration-count: 3;
  */
}
.heading-primary-primary--sub {
  display: block;
  font-size: 2rem;
  font-weight: 700;
  letter-spacing: 1.75rem;
  animation: moveInRight 1s ease-out;
  /*  
  animation: name duration timing-function delay iteration-count direction fill-mode;
  */
}

.btn:link, .btn:visited {
  text-transform: uppercase;
  /* Removes default blue and underline look from a link */
  text-decoration: none;
  padding: 1.5rem 4rem;
  display: inline-block;
  border-radius: 10rem;
  transition: all 0.2s;
  font-size: 1.6rem;
  position: relative;
}
.btn:hover {
  transform: translateY(-3px);
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
}
.btn:hover::after {
  transform: scaleX(1.4) scaleY(1.6);
  opacity: 0;
}
.btn:active {
  transform: translateY(-1px);
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2);
}
.btn--white {
  background-color: #fff;
  color: #777;
}
.btn--white::after {
  background-color: #fff;
}
.btn::after {
  /* content and display properties need to define or else the element wont show at all */
  content: "";
  display: inline-block;
  /* Here we are making the pseudo element to be indentical the button */
  width: 100%;
  height: 100%;
  border-radius: 10rem;
  /* This will make the element to be right behind the button */
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  transition: all 0.4s;
}
.btn--animated {
  animation: moveInBottom 0.5s ease-out 0.75s;
  /* This will apply the values that the animation has at the start, so the button doesnt show at first */
  animation-fill-mode: backwards;
}

.header {
  height: 95vh;
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(hero.3ad8264a.jpg);
  background-size: cover;
  background-position: top;
  position: relative;
  /* 
  clip-path adds the cropping effect starting top left corner moving clock wise
  left top, right top, bottom right, bottom left 
  x y
  for more information there is a tool call clippy
  */
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
}
.header__logo-box {
  position: absolute;
  top: 4rem;
  left: 4rem;
}
.header__logo {
  height: 3.5rem;
}
.header_text-box {
  /* Trick to center elements using absolute position */
  position: absolute;
  top: 40%;
  left: 50%;
  transform: translate(-50%, -50%);
  /* ================================================= */
  text-align: center;
}

.row {
  max-width: 114rem;
  background-color: #eee;
  margin: 0 auto;
}
.row:not(:last-child) {
  margin-bottom: 8rem;
}
.row::after {
  content: "";
  display: table;
  clear: both;
}
.row [class^=col-] {
  background-color: orangered;
  float: left;
}
.row [class^=col-]:not(:last-child) {
  margin-right: 6rem;
}
.row .col-1-of-2 {
  width: calc((100% - 6rem) / 2);
}
.row .col-1-of-3 {
  width: calc((100% - (6rem * 2)) / 3);
}
.row .col-1-of-4 {
  width: calc((100% - (6rem * 3)) / 4);
}
.row .col-2-of-3 {
  width: calc(2 *((100% - (6rem * 2)) / 3) + 6rem);
}
.row .col-2-of-4 {
  width: calc(2 *((100% - (6rem * 3)) / 4) + 6rem);
}
.row .col-3-of-4 {
  width: calc(3 *((100% - (6rem * 3)) / 4) + (6rem *2));
}